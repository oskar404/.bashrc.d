#!/usr/bin/env bash
# Sync git repositories
#
# This script is intended to be used with crontab

script_name=$(basename "$0")
sync_repos=()
push_repos="yes"

function die() {
    echo "${@}" 1>&2
    exit 1
}

function usage() {
    cat <<EOF
usage: ${script_name} [-n] <git-dir> [<git-dir> ..]

  -h/--help       Produce this help
  -n/--dry-run    Do all steps except do not push to remote

This script synchronizes git repositories with remote. The steps taken are:

  git commit -a -m "Auto-commit: <file>.."
  git pull --rebase
  git push

To use this with crontab you can add something like this:

  */10 8-18 * * 1-5 <path>/autosync <repo1> <repo2> >/tmp/autosync.log 2>&1
EOF
    exit 1
}

function parse_args() {
    while [[ $# -gt 0 ]]; do
        local __option="${1:-}"

        case "${__option}" in
            -h | --help)
                usage
                ;;
            -n | --dry-run)
                unset push_repos
                ;;
            *)
                sync_repos=("${sync_repos[@]}" "$1")
                ;;
        esac
        shift
    done
    [[ ${#sync_repos[@]} -eq 0 ]] && die "No git repos defined"
}

# Check that all references are git repositories
function validate_repos() {
    for repo in "$@"
    do
        [ ! -d "${repo}"/.git ] && echo "Invalid git repo: ${repo}" && exit 3
    done
}

# Sync the git repositories
function synchronize_repos() {
    for repo in "$@"
    do
        echo "================================"
        echo "repo: ${repo}"
        pushd "${repo}"
        local message="Auto-commit: $(git status --untracked-files=no --porcelain | awk 'NR==1{print $2}').."
        echo "1: git commit -a -m \"${message}\""
        git commit -a -m "${message}"
        echo "2: git pull --rebase"
        git pull --rebase
        echo "3: git push"
        [[ -n ${push_repos} ]] && git push
        popd
    done
}

function main() {
    parse_args "$@"
    validate_repos "${sync_repos[@]}"
    synchronize_repos "${sync_repos[@]}"
}

# Run only when excuted as command
if [[ "${0}" == "${BASH_SOURCE}" ]]; then
    main "$@"
fi

